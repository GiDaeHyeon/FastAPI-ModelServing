from pytorch_lightning import Trainerfrom pytorch_lightning.loggers import TensorBoardLoggerfrom pytorch_lightning.callbacks.early_stopping import EarlyStoppingfrom pytorch_lightning.callbacks import ModelCheckpointfrom pytorch_lightning.plugins import DDPPluginfrom datamodule import BERTDataModulefrom model import BertModelfrom trainmodule import Classifier######################## pytorch lightning config#######################logger = TensorBoardLogger(    save_dir='log',    name='NSMC log',    default_hp_metric=False)checkpoint_callback = ModelCheckpoint(    monitor='Accuracy',    dirpath='./CKPT',    filename='NSMC_CKPT',    mode='max')early_stop_callback = EarlyStopping(    monitor='Accuracy',    min_delta=1e-4,    patience=5,    mode='max')trainer = Trainer(max_epochs=10,                  logger=logger,                  gpus=[0, 1],                  accelerator='ddp',                  gradient_clip_val=3.,                  gradient_clip_algorithm='norm',                  plugins=DDPPlugin(find_unused_parameters=False),                  callbacks=[early_stop_callback,                             checkpoint_callback])if __name__ == '__main__':    model = BertModel()    classifier = Classifier(model)    datamodule = BERTDataModule()    trainer.fit(model=classifier, datamodule=datamodule)